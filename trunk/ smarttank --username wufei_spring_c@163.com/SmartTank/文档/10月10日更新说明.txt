
前一段时间对代码进行了大量的修改。主要完成了一下几个方面：

1	重写了物理更新和碰撞检测管理类，重新设计了物理更新和碰撞检测方法的组织结构。
	详见PhisicalCollision目录中的各个文件。

2	通过一个自定义的一个MultiLinkedList容器来容纳场景物体。
	该容器拥有时间复杂度为o(1)的快速添加和删除元素的方法。
	另一个特别之处是能够创建以不同身份（接口或父类）来看待其中对象的容器副本，并且容器副本始终保持和母体的同步。这使得我们只需要维护母体。

3	写了一个Scene类用于管理一个场景，使用C#的内建序列化机制来支持场景信息的保存和读取。在某些方面尚不完善，将来需要进行修改。


接下来的任务是实现视野管理。视野的计算显然与场景物体的性质有关。所以场景物体的接口和Scene类都会在实现视野管理之后进行修改。
所以现在并不进行具体的场景物体类（比如tank）的编写。故使之前的tank相关类统统暂时无效。
