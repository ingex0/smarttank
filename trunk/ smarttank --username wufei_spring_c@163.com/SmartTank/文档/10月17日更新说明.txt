
修改了PhiColManger类，使其支持允许相互重叠的物体的碰撞检测。以满足客观上存在的需求。

写了一个DemoScreen类。使用了游戏的主体框架。

恢复了以前写的Tank的相关类的代码。并添加了一个ShellNormal类。

写了一个TankAI的接口并写了一个暂时的ManualControl类来实现玩家控制。

修改了SceneKeeper类并添加了ISceneKeeper接口。

测试了PhiColManager和动态注册删除场景物体的过程。当中发现了一些Bug并做出了修改。

现在的Demo里，空格键控制炮弹发射，awsd控制移动，jk控制炮塔转动。


接下来的任务是在这个Demo中实现一些坦克特效，例如开火时炮管后座的动画，管口喷出的火焰等。



另外在游戏策划上有以下设想：
	
	我们的SmartTank可以由很多小的游戏构成。
	
	每一个小游戏的场景可以由IGameScreen接口继承。再将这些GameScreen组成关卡结构，添加到主菜单中。
	
	就像《魔兽争霸》的关卡那样，既支持有连续剧情的系列关卡，也支持基于SmartTank平台的独立关卡。
	
	这样，我们也可以对外提供SmartTank平台的SDK，让更多人能够加入到平台内容的开发中。
	
	
	现在我有两个原始的小游戏创意：
	
	一个是基于射击预估的，四周有飞行的物体不断飞来，玩家控制的坦克要打下尽量多的飞行物体。
	
	怎样添加游戏道具和游戏效果使游戏更具可玩性还需要专门策划。
	
	另一个是基于炮弹躲避的，控制坦克躲开四周射来的炮弹。同样还是原始的想法，需要专门的策划。
	
	所以还需要大家都想想游戏的不同创意。