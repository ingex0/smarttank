using System;
using System.Collections.Generic;
using System.Text;
using GameBase;

using GameBase.Helpers;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Input;
using Platform.Logic.GameObjects;

using GameBase.Graphics;
using Platform.Logic.Phisics;

namespace AI_Tank.Test
{
    class PhisicTest : BaseGame
    {
        PhisicsUpdater phisicsUpdater = new PhisicsUpdater();
        TestPhisicalObject obj = new TestPhisicalObject();
        Sprite sprite;
        protected override void Initialize ()
        {
            this.IsMouseVisible = true;
            Coordin.SetScreenViewRect( new Rectangle( 0, 0, ClientRec.Width, ClientRec.Height ) );
            Coordin.SetLogicViewRect( new Rectangle( 0, 0, 100, 100 ) );
            sprite = new Sprite();
            phisicsUpdater.phisicalregister.add( obj );

            base.Initialize();
        }
        protected override void LoadGraphicsContent ( bool loadAllContent )
        {
            base.LoadGraphicsContent( loadAllContent );

            sprite.LoadTextureFromContent( "Test\\hucSmart", false );
            sprite.SetParameters( new Vector2( 41, 45 ), obj.NewtonPhisicalStatus.Pos, 20f, 20f, obj.NewtonPhisicalStatus.Rota + MathHelper.PiOver2, Color.White, 0.5f, SpriteBlendMode.AlphaBlend );

        }
        protected override void Update ( GameTime gameTime )
        {
            MouseState MS = Mouse.GetState();

            phisicsUpdater.Update( (float)gameTime.ElapsedGameTime.TotalMilliseconds );

            sprite.Pos = obj.NewtonPhisicalStatus.Pos;
            sprite.Rata = obj.NewtonPhisicalStatus.Rota + MathHelper.PiOver2;
            //sprite.UpdateTransformBounding();

            //Console.WriteLine( "X:" + sprite.Pos.X + "Y" + sprite.Pos.Y );
            base.Update( gameTime );
        }
        protected override void GameDraw ( GameTime gameTime )
        {
            sprite.Draw();
        }




    }
}
