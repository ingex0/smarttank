using System;
using System.Collections.Generic;
using System.Text;
using Platform;
using Platform.Logic.GameObjects;
using Microsoft.Xna.Framework;
using GameBase.Input;
using Microsoft.Xna.Framework.Graphics;
using GameBase.Helpers;
using GameBase;

namespace AI_Tank.Test
{
    class TestCollision : GameManager
    {
        TestCollider huc;
        TestCollider turret;
        TestCollider ball;

        protected override void Initialize ()
        {
            base.Initialize();

            huc = new TestCollider( "Test\\hucSmart" );
            huc.collideSprite.SetParameters( new Vector2( 41, 45 ), new Vector2( 20, 20 ), 1f, 0f, Color.White, 0.1f, SpriteBlendMode.AlphaBlend );
            turret = new TestCollider( "Test\\turret" );
            turret.collideSprite.SetParameters( new Vector2( 32, 64 ), new Vector2( 150, 220 ), 1f, 0f, Color.White, 1f, SpriteBlendMode.AlphaBlend );
            ball = new TestCollider( "Test\\item6" );
            ball.collideSprite.SetParameters( new Vector2( 30, 30 ), new Vector2( 330, 50 ), 1f, 0f, Color.White, 1f, SpriteBlendMode.AlphaBlend );
        }

        protected override void Update ( GameTime gameTime )
        {
            base.Update( gameTime );

            if (InputHandler.MouseMoved && InputHandler.CurMouseLeftBtnPressed)
            {
                huc.collideSprite.Pos = Coordin.LogicPos( ConvertHelper.PointToVector2( InputHandler.CurMousePos ) );
            }

            huc.Update();
            turret.Update();
            ball.Update();

            // 循环为了测试效率，基本可以满足要求
            //for (int i = 0; i < 200; i++)
            //{
            CollisionManager.checkCollision( GameManager.ColliderRegister );
            //}
        }

        protected override void GameDraw ( GameTime gameTime )
        {
            huc.Draw();
            turret.Draw();
            ball.Draw();
        }
    }
}
