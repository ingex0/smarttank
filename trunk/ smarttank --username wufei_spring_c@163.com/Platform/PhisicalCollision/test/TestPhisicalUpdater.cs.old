using System;
using System.Collections.Generic;
using System.Text;
using Platform;
using Platform.PhisicalCollision.test;
using Microsoft.Xna.Framework;
using GameBase.Graphics;
using GameBase.Helpers;
using Microsoft.Xna.Framework.Graphics;

namespace Main.PhisicalCollision.test
{
    class TestPhisicalUpdater : GameManager
    {
        TestCollider testCollider1;
        TestCollider testCollider2;
        TestCollider testCollider3;
        TestCollider testCollider4;
        TestCollider testCollider5;



        protected override void Initialize ()
        {
            base.Initialize();

            GameManager.border = new Platform.PhisicalCollision.Border( 10, 290, 10, 190 );

            testCollider1 = new TestCollider( "testCollide1", new Vector2( 100, 26 ), new Vector2( 0, 0 ), 0, 0, Color.White );

            ObjManager.RegistPhisicalObj( testCollider1 );

            testCollider2 = new TestCollider( "testCollide2", new Vector2( 100, 56 ), new Vector2( 0, 0 ), 0, 0, Color.Red );

            ObjManager.RegistPhisicalObj( testCollider2 );

            testCollider3 = new TestCollider( "testCollide3", new Vector2( 100, 86 ), new Vector2( 0, 0 ), 0, 0, Color.Black );

            ObjManager.RegistPhisicalObj( testCollider3 );

            testCollider4 = new TestCollider( "testCollide4", new Vector2( 100, 116 ), new Vector2( 0, 0 ), 0, 0, Color.Chocolate );

            ObjManager.RegistPhisicalObj( testCollider4 );

            testCollider5 = new TestCollider( "testCollide5", new Vector2( 100, 170 ), new Vector2( 0, -100 ), 0, 0, Color.Green );

            ObjManager.RegistPhisicalObj( testCollider5 );
        }

        protected override void Update ( Microsoft.Xna.Framework.GameTime gameTime )
        {
            base.Update( gameTime );

        }

        protected override void GameDraw ( GameTime gameTime )
        {
            base.GameDraw( gameTime );
            BasicGraphics.DrawRectangle( ConvertHelper.RectanglefToRectangle( border.BorderRect ), 3, Color.Red, 0f );
        }
    }
}
