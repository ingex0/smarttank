string description = "input Rader Sector Buffer and Depth Map, returns a rader texture";



texture DepthMap;

sampler DepthMapSampler = sampler_state 
{
    texture = <DepthMap>;
    //AddressV  = CLAMP;
    //AddressW  = CLAMP;
    //MIPFILTER = NONE;
    //MINFILTER = LINEAR;
    //MAGFILTER = LINEAR;
};


struct VertexInput
{
	float2 pos : POSITION;
}

struct VertexOutput
{
	float2 pos : POSITION;
	float2 tex : TEXCOORD0 ;	
}

VertexOutput VS_RenderRader(VertexInput in)
{
	VertexOutput out;
	

	out.pos = in.pos;
	
	out.tex = in.pos;
	
	return out;
}

COLOR PS_RenderRader(float2 intex:TEXCOORD0)
{
	intex.x = 0.5f * (intex.x / intex.y + 1f);
	float depth = tex2D(DepthMapSampler, intex);
	
	if (intex.y > depth)
		{
			return float4(0.3f,0.3f,0.3f,0.3f);
		}
		else
			{
				return float4(1.0f,1.0f,1.0f,1.0f);
			}
}