using System;
using System.Collections.Generic;

using System.Text;

namespace Platform.Logic.Registers
{
    /**
     *用来实现后台物体管理的抽象类
     *目前需要3个不同类型：物理物体管理(管理IPhisicalObject)（可移动不一定可进行碰撞检测，如天上的云等）
     * 可碰撞物体，其中可ICollidable继承IPhisicalObject
     * 可绘制物体 
     * 初步考虑使用范型实现
     */

    public class Register<ObjectType>
    {
        protected List<ObjectType> container;


        public void Add ( ObjectType newobj )
        {
            if (!container.Contains( newobj ))
                container.Add( newobj );
        }
        public void Remove ( ObjectType obj )
        {
            if (container.Contains( obj ))
                container.Remove( obj );
        }

        public ObjectType[] ToArray ()
        {
            return container.ToArray();
        }

        public void RemoveAll ()
        {
            foreach (ObjectType obj in container)
            {
                container.Remove( obj );
            }
        }

        public bool contains ( ObjectType obj )
        {
            return container.Contains( obj );
        }

        public void ForEach(
    }
}
