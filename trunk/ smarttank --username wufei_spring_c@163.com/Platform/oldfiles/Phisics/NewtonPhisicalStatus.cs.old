using System;
using System.Collections.Generic;
using System.Text;
using Microsoft.Xna.Framework;

namespace Platform.Logic.Phisics
{
    public class NewtonPhisicalStatus
    {
        /**
         * 定义物理状态
         * 所有运算基于笛卡儿坐标系         
         */
        #region Variables

        public Vector2 Vel;
        public float AngVel;
        public float Rota;
        public Vector2 Pos;

        public float Weight;//重量，以KG为单位
        public float Inertia;//转动惯量
        public float Moment;//力矩
        public float FrictionFactor;

        public float Force;//动力大小，标量，动力方向沿轴方向

        public float DirectionDegree
        {
            get
            {
                float result = Rota / ((float)(2 * Math.PI)) * 360;
                return result;
            }
            set
            {
                this.Rota = (float)(value * 2 * Math.PI) / 360;
            }
        }

        public Vector2 DirectionVector
        {
            get
            {
                Vector2 vector = new Vector2( (float)Math.Cos( this.Rota ), (float)Math.Sin( Rota ) );
                return vector;
            }
            set
            {
                float length = value.Length();
                if (value.Y > 0) Rota = (float)Math.Acos( value.X / length );
                else Rota = 2f * (float)Math.PI - (float)Math.Acos( value.X / length );

            }
        }

        #endregion

        public NewtonPhisicalStatus ()
        {
            
        }

        public NewtonPhisicalStatus ( NewtonPhisicalStatus status )
        {

            this.AngVel = status.AngVel;
            this.Rota = status.Rota;
            this.Vel = status.Vel;
            this.Pos = status.Pos;
            this.Weight = status.Weight;
            this.FrictionFactor = status.FrictionFactor;
            this.Force = status.Force;
            this.Inertia = status.Inertia;
            this.Moment = status.Moment;


        }





        
    }
}
