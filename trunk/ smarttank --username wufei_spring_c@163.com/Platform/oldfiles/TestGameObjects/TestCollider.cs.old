using System;
using System.Collections.Generic;
using System.Text;
using GameBase.Interfaces;
using GameBase.Graphics;
using Platform.Logic.Collision;
using Platform.Logic.Registers;
using Microsoft.Xna.Framework.Graphics;
using Platform.Logic.Phisics;

namespace Platform.Logic.GameObjects
{
    class TestCollider : ICollidable
    {
        public Sprite collideSprite;

        CollisionResult result;

        public TestCollider ( string assetName )
        {
            collideSprite = new Sprite();
            collideSprite.LoadTextureFromContent( assetName, true );

            // 这里有个问题需要解决：平台之外（比如规则程序集中）的ICollidable怎样注册。
            // 该问题涉及GameBase和Platform程序集的定位和全部程序集之间的结构问题。有待深入讨论。
            // 如果规则程序集对Platform程序集可见的话问题容易解决。
            // 注：规则程序集暂时作为附加规则和附加游戏对象的总称。
            GameManager.ColliderRegister.add( this );
        }

        public void Update ()
        {
            // 这样写只是为了显示上的方便。
            collideSprite.Color = Color.White;
        }

        #region ICollidable 成员

        public Sprite CollideSprite
        {
            get { return collideSprite; }
        }

        public void HandleCollideWith ( CollisionResult result, ICollidable objB )
        {
            collideSprite.Color = Color.Red;
            this.result = result;
        }

        #endregion

        public void Draw ()
        {
            if (result != null && result.isIntersected)
            {
                BasicGraphics.DrawLine( result.InterPos, result.InterPos + 20 * result.InterNormalVector, 3f, Color.Yellow, 0f );
            }
            this.collideSprite.Draw();
        }
        #region IPhisical 成员
        public NewtonPhisicalStatus NewtonPhisicalStatus
        {
            get
            {
                //DO NOTHING
                return new NewtonPhisicalStatus();

            }
        }
        public void prepareNextStatus ( float millisecond )
        {
            //DO NOTHING
        }
        public void validate ()
        {
            //DO NOTHING
        }
        #endregion
    }
}
