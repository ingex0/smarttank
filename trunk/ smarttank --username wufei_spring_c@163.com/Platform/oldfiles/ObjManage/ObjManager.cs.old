using System;
using System.Collections.Generic;
using System.Text;
using Platform.PhisicalCollision;

namespace Platform.ObjManage
{
    public class ObjManager
    {
        LinkedList<IPhisicalUpdater> phiUpds = new LinkedList<IPhisicalUpdater>();
        LinkedList<ICollider> dolUpds = new LinkedList<ICollider>();
        LinkedList<Platform.GameDraw.IDrawable> drawables = new LinkedList<Platform.GameDraw.IDrawable>();


        internal LinkedList<IPhisicalUpdater> PhisicalUpdaters
        {
            get { return phiUpds; }
        }
        internal LinkedList<ICollider> CollideUpdaters
        {
            get { return dolUpds; }
        }
        internal LinkedList<Platform.GameDraw.IDrawable> Drawables
        {
            get { return drawables; }
        }


        public void RegistPhisicalObj ( IPhisicalObj phisicalObj )
        {
            drawables.AddLast( phisicalObj );
            phiUpds.AddLast( phisicalObj.PhisicalUpdater );
            if (phisicalObj.PhisicalUpdater is ICollider)
            {
                dolUpds.AddLast( phisicalObj.PhisicalUpdater as ICollider );
            }
        }
    }
}
